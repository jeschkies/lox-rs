class DevonshireCream {
  serveOn() {
    return "Scones";
  }
}

print DevonshireCream;

class Bagel {
  init() {
    this.topping = "cream";
  }
}
var bagel = Bagel();
print bagel;
print "Topping: " + bagel.topping;

bagel.topping = "whipped cream";
print "Topping: " + bagel.topping;

class Bacon {
  eat() {
    print "Crunch crunch crunch!";
  }
}

Bacon().eat();

class Cake {
  taste() {
    var adjective = "delicious";
    print "The " + this.flavor + " cake is " + adjective + "!";
  }
}

var cake = Cake();
cake.flavor = "German chocolate";
cake.taste();

class Thing {
  getCallback() {
    fun localFunction() {
      print this;
    }

    return localFunction;
  }
}

var callback = Thing().getCallback();
callback();

class Doughnut {
  cook() {
    print "Fry until golden brown.";
  }
}

class BostonCream < Doughnut {
  cook() {
    super.cook();
    print "Pipe full of custard and coat with chocolate.";
  }
}

BostonCream().cook();
// Prints:
// Fry until golden brown.
// Pipe full of custard and coat with chocolate.
